# ################################
# Model: Mamaba  + discrete Tokens
# Decoding AM: Greedy for validation, and Beam search for testing
# Augmentation: SpecAugment
# Authors: Pooneh Mousavi
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/train_mamaba_encoded/<seed>
output_wer_folder: !ref <output_folder>/
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# URL for the mamba model.
mamba_hub: state-spaces/mamba-130m-hf
mamba_folder: !ref <save_folder>/mamba_checkpoint
freeze_model: False
max_new_tokens: 10

# Data files
data_folder: data/LibriSpeech # e,g./path/to/LibriSpeech
# noise/ris dataset will automatically be downloaded
# data_folder_rirs: !ref <data_folder>
train_splits: ["train-clean-100"]
dev_splits: ["dev-clean"]
test_splits: ["test-clean"]
skip_prep: False
ckpt_interval_minutes: 25 # save checkpoint every N min
train_csv: !ref <output_folder>/train.csv
valid_csv: !ref <output_folder>/dev-clean.csv
test_csv:
   - !ref <output_folder>/test-clean.csv


####################### Training Parameters ####################################

number_of_epochs: 1
sorting: ascending
precision: fp32 # bf16, fp16 or fp32
sample_rate: 24000

# EnCodec parameters
vocab_size: 1024
bandwidth: 1.5
num_codebooks: 2


# Optimizer parameters
lr: 0.0005
weight_decay: 0.01
improvement_threshold: 0.0025
annealing_factor: 0.9
patient: 0
enable_scheduler: True


# Special tokens
bos_token: "BOS"
eos_token: "EOS"

audio_token: "|audio|"
text_token: "|text|"

special_tokens: [
    !ref <bos_token>,
    !ref <eos_token>,
    !ref <audio_token>,
    !ref <text_token>
]

attr_to_special_tokens:
    "bos_token": !ref <bos_token>
    "eos_token": !ref <eos_token>
    "additional_special_tokens": [!ref <audio_token>, !ref <text_token>]

ignore_index: -100
label_smoothing: 0

# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 3 per GPU to fit 32GB of VRAM
batch_size: 4
test_batch_size: 4

# Dataloader options
train_dataloader_opts:
   batch_size: !ref <batch_size>

valid_dataloader_opts:
   batch_size: !ref <batch_size>

test_dataloader_opts:
   batch_size: !ref <test_batch_size>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
   limit: !ref <number_of_epochs>

####################### Model Parameters #######################################
# Masks
padding_mask: !name:speechbrain.lobes.models.transformer.Transformer.get_key_padding_mask

#mamba model
mamba_model: !new:speechbrain.lobes.models.huggingface_transformers.mamba.Mamba
    source: !ref <mamba_hub>
    freeze: !ref <freeze_model>
    save_path: !ref <mamba_folder>
    max_new_tokens: !ref <max_new_tokens>
    with_peft: False

# EnCodec model (see https://huggingface.co/docs/transformers/v4.31.0/en/model_doc/encodec)
codec: !new:speechbrain.lobes.models.huggingface_transformers.encodec.Encodec
    source: facebook/encodec_24khz  # Only the 24kHz version supports mono audio
    save_path: !ref <save_folder>
    sample_rate: !ref <sample_rate>
    bandwidth: !ref <bandwidth>
    flat_embeddings: False
    freeze: True
    renorm_embeddings: False

log_softmax: !new:speechbrain.nnet.activations.Softmax
   apply_log: True

ce_loss: !new:torch.nn.CrossEntropyLoss
    ignore_index: !ref <ignore_index>
    label_smoothing: !ref <label_smoothing>


modules:
   mamba: !ref <mamba_model>
   codec: !ref <codec>


model: !new:torch.nn.ModuleList
   - [!ref <mamba_model>]



mamba_opt_class: !name:torch.optim.AdamW
    lr: !ref <lr>
    betas: (0.9, 0.98)
    eps: 1.e-8
    weight_decay: !ref <weight_decay>

# Schedulers
lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: !ref <improvement_threshold>
    annealing_factor: !ref <annealing_factor>
    patient: !ref <patient>



############################## Augmentations ###################################

# # Speed perturbation
# speed_perturb: !new:speechbrain.augment.time_domain.SpeedPerturb
#    orig_freq: !ref <sample_rate>
#    speeds: [95, 100, 105]

# # Frequency drop: randomly drops a number of frequency bands to zero.
# drop_freq: !new:speechbrain.augment.time_domain.DropFreq
#    drop_freq_low: 0
#    drop_freq_high: 1
#    drop_freq_count_low: 1
#    drop_freq_count_high: 3
#    drop_freq_width: 0.05

# # Time drop: randomly drops a number of temporal chunks.
# drop_chunk: !new:speechbrain.augment.time_domain.DropChunk
#    drop_length_low: 1000
#    drop_length_high: 2000
#    drop_count_low: 1
#    drop_count_high: 5

# # Augmenter: Combines previously defined augmentations to perform data augmentation
# wav_augment: !new:speechbrain.augment.augmenter.Augmenter
#    concat_original: True
#    min_augmentations: 4
#    max_augmentations: 4
#    augment_prob: 1.0
#    augmentations: [
#       !ref <speed_perturb>,
#       !ref <drop_freq>,
#       !ref <drop_chunk>]

############################## Decoding ########################################

# Decoding parameters
# test_beam_search:
#    beam_size: 143
#    topk: 1
#    blank_index: !ref <blank_index>
#    space_token: ' ' # make sure this is the same as the one used in the tokenizer
#    beam_prune_logp: -12.0
#    token_prune_min_logp: -1.2
#    prune_history: True
#    alpha: 0.8
#    beta: 1.2
#    # can be downloaded from here https://www.openslr.org/11/ or trained with kenLM
#    # It can either be a .bin or .arpa ; note: .arpa is much slower at loading
#    # If you don't want to use an LM, comment it out or set it to null
#    kenlm_model_path: null

############################## Logging and Pretrainer ##########################

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
   checkpoints_dir: !ref <save_folder>
   recoverables:
      mamba: !ref <mamba_model>
      lr_annealing: !ref <lr_annealing>
      counter: !ref <epoch_counter>


train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
   save_file: !ref <train_log>

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
   split_tokens: True
